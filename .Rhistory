close(con)
con <- url("http://www.jhsph.edu", "r")
x <- readLines(con)
head(x)
x
getwd()
dir
dir()
source("data.R")
source("data.R")
second <- function(x) {x + rnorm(lenght(x))
}
second
second <- function(x) {x + rnorm(length(x))}
second(4)
second(4:10)
rnorm(0)
third <- function(x,) { y^3 + sqrt(x)}
third <- function(x,y) { y^3 + sqrt(x)}
third(x,y) <- function(x,y) { y^3 + sqrt(x)}
third <- function(x,y) { y^3 + sqrt(x)}
third(2,4)
third(0,0)
third(1,1)
third(1,4)
third <- function(x,y) { y^3 + x^0.5}
third(1,4)
x <- rnorm(100,2,4)
summary(x)
str(x)
f <- gl(40,10)
str(f)
summary(f)
library(datasets(
)
)
library(datasets)
head(airquality, n=10)
str(airquality)
m <- matrix(rnorm(100),10,10)
str(m)
m[,1]
s<- split(airquality, airquality$Month)
s
str(S)
str(s)
for (i in 1: 10 ) { print(i) }
for (i in 1: 10 ) { print(i^3) }
x <- matrix(1:6, 2, 3)
x
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
for(i in seq_len(ncol(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
for(i in seq_len(ncol(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
for(i in seq_len(ncol(x))) {
for(j in seq_len(nrow(x))) {
print(x[i,j])
}
}
count <- 0
while(count<10) { print(count) count < - count+1)}
while(count<10) { print(count) count < - count+1}
while(count<10) { print(count) count < - count+1}
while (count < 10)
print(count)
break
f<- function(a, b=1, c=2, d=NULL) {
}
f
f <- function(a,b) { a^2}
f(3)
args(paste)
paste("a","b", se=":")
args(cat)
args(plot)
plot( f(2:9))
source("C:\\Users\\davis.balaba\\Desktop\\Analytics\\R\\Computing for Data Analysis\\Computing for Data Analysis\\Lecture 2.03 - Scoping Rules.R")
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
power
pow
power(n)
power(3)
x <- list(a=1:5, b=rnorm(10))
lapply(x,mean)
x
x <- list(a=matrix(1:4,2,2), b=matrix(1:6,3,2))
x
lapply(x,function(elt) elt[,1])
lapply(x,function(elt) elt[1,])
x <- list(a=1:4, b=rnorm(10), c=rnorm(20,1,), d=rnorm(100,5))
sapply(x, mean)
mean(x)
a
x<-c(1,3,5)
y<-c(3,2,10)
rbind(x,y)
x<- list(2, "a", TRUE)
x[[2]]
x<-1:4
y<- 2:3
x+y
x<- c(3,5,1,10,12,6)
x[x==0] <-6
x
x[x<-5] <-0
x
x[x<=5] <-0
x
load("C:\\Users\\davis.balaba\\Documents\\R\\Practice.RData")
ls
data1 <- read.csv("C:/Users/davis.balaba/Documents/IR/VZW/vzw_cr1.csv", header = TRUE)data1 <- read.csv("C:/Users/davis.balaba/Documents/IR/VZW/vzw_cr1.csv", header = TRUE)data1 <- read.csv("C:/Users/davis.balaba/Documents/IR/VZW/vzw_cr1.csv", header = TRUE)
data1 <- read.csv("C://Users//davis.balaba//Documents//R//hw1_data.csv", header = TRUE)
data1
data1[1:2,]
data1[152:153,]
data1[47,]
bad <- is.na(data1[1,])
bad
bad <- is.na(data1[,1])
bad
sum(!bad)
sum(bad)
mean(data1[!bad])
mean(data1[!bad],1)
mean(data1[!bad],1])
mean(data1[!bad,1])
data1[data1[,1]>31]
data1[data1[,1]>31,]
b<-data1[data1[,1]>31,]
c<- is.na(b)
c<- is.na(b[,1])
d<-data1[!c,]
d
c
e<- c(c[,4]>90,)
e<-data1[data1[,4]>90,]
e
mean(e[,2])
bad <- is.na(e[,1])
bad
f <- e[!bad,]
f
mean(f[,2])
g<- data1[data1[,5]==5,]
g
mean(g[,4])
g<- data1[data1[,5]==6,]
g
mean(g[,4])
load("C:\\Users\\davis.balaba\\Documents\\R_Coursera.RData")
if(x>3) {y<-10} else {y<-15}
x=10
x
if(x>3) {y<-10} else {y<-15}
y
for(i in 1:10) { print(i) }
#seq_along(x) creates integer based on length of x
for (i in seq_along(x)) print(x[i])
x<- list(a+1:5, b= rnorm(10))
x<- list(a=1:5, b= rnorm(10))
lapply(x,mean)
x
x<- list(a= matrix(1:4, 2,2), b= matrix(1:5,3,2))
x<- list(a= matrix(1:4, 2,2), b= matrix(1:6,3,2))
lapply(x,function(elt) elt[,1])
x<- list(a=1:4, b= rnorm(10), c=rnorm(20), d=rnorm(100,5))
lapply(x,mean)
sapply(x,mean)
x<- matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,2,sum)
apply(x,2,range)
apply(x,1,mean)
apply(x,1,range)
a <- array(rnorm(2*2*10), c(2,2,10))
a
apply(a,c(1,2), mean)
a<- matrix(1:4, c(2,2))
a
b<- matrix(5:8, c(2,2))
b
rowmeans(a)
rowMeans(a)
b<- matrix(5:11, c(2,2,2))
b<- matrix(5:12, c(2,2,2))
b
rowMeans(b)
rowMeans(b, dims=2)
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
f<- gl(3,10)
str(gl)
f
tapply(x,f,mean)
tapply(x,f,range)
split(x,f)
m<-split(x,f)
m[,1]
m[[,1]]
library(datasets)
head(airquality)
s<- split(airquality, airquality$Month)
lapply(s,function(x) colMeans(x[,c("Ozone", "Solar.R"),"Wind"]))
lapply(s,function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")]))
lapply(s,function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")], na.rm=TRUE))
x<-rnorm(10)
f1<- gl(2,5)
f2<- gl(5,2)
interaction(f1,f2)
split(x,list(f1,f2))
split(x,list(f1,f2), drop = TRUE)
a<-list (rep(1,4), rep(2,3), rep(3,2), rep(4,1))
a
mapply(rep, 1:4, 4:1)
add2
}
func2(1)
add2(1)
func2<- function(x) {
if(x>0)
print ("x is >0")
else
print ("x is < 0")
invisible(x)
}
func2(1)
mean(x)
mean(z)
traceback()
lm(y-z)
traceback()
denug(lm)
debug(lm)
lm(y-z)
read.csv("nosuchfile")
options(error=recover)
read.csv("nosuchfile")
2
5
67
3
1
0
exit
library(datasets)
data(iris)
?iris
head(iris)
lapply(s,function(iris) colMeans(iris[,c("Species"]))
lapply(s,function(iris) colMeans(iris[,c("Species")]))
split(iris,"Species")
v<-split(iris,"Species")
v
lapply(iris,function(x) colMeans(x[,c("Sepal.Length")], na.rm=TRUE))
str(v)
args(v)
spec <- c("setosa", "versicolor", "virginica")
spec
v<-split(iris,spec)
v
spec <- array("setosa", "versicolor", "virginica")
spec <- list("setosa", "versicolor", "virginica")
spec
v<-split(iris,spec)
v
colMeans(iris)
apply(iris[,1:4],2,mean)
sp < - split(iris, iris$species)
head(iris)
sp < - split(iris, iris$Species)
sp <- split(iris, iris$Species)
sp
sp[[3]]
apply(iris([,1], 2, mean))
apply(iris[,1], 2, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
?mtcars
head(mtcars)
mtcars
sapply(mtcars,cyl, mean)
tapply(mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg,cyl,mean))
with(mtcars, tapply(hp,cyl,mean))
debug(ls)
ls
options(error=?)
options(error= defualt)
options(error= default)
mean(x)
x
options
debug(ls)
ls
library(datasets)
data(iris)
head
library(datasets)
data(iris)
head
head
utils:::menuInstallPkgs()
q()
install.packages("rpart")
install.packages("devtools")
install.packages("KernSmooth")
library(kernsmooth)
kernsmooth
library(KernSmooth)
clear
Clear
ls
setwd("C:/Users/davis.balaba/Desktop/Coursera/Assignment3")
dir()
source("rankhospital.R")
rankhospital("NC","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", BEST")
""
rankhospital("NC","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "BEST")
rankhospital("NC","HEART ATTACk", "BEST")
data <- read.csv("outcome-of-care-measures.csv", header= TRUE)
h <- head(data)
h
bad <- is.numeric(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
bad
bad <- as.numeric(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
bad
h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
bad <- is.na(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
bad
bad <- subset(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack != "Not Available")
bad
source("rankhospital.R")
rankhospital("NC", "HEART ATTACK", "BEST")
source("rankhospital.R")
rankhospital("NC", "HEART ATTACK", "BEST")
rankhospital("TX", "HEART ATTACK", "BEST")
coz <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
v<- data[,c("State",coz, "Hospital.Name")]
state_data <- subset(v,v$State== toupper(state), v$coz != "Not Available")
state_data <- subset(v,v$State== "NC", v$coz != "Not Available")
head(state_date)
head(state_data)
state_data <- subset(v,v$State== "NC")
head(state_data)
coz
c <- head(state_data)
st <- subset(c,c$State== "NC", c$coz != "Not Available")
st
st <- c[,2]
st
st2 <- is.numeric(st)
st2
st2 <-subset(st, st$coz != "Not Available")
st2 <-subset(st2, st2$coz != "Not Available")
st
st2 <-subset(st, st$coz != "Not Available")
coz
st2 <-subset(h, h$coz != "Not Available")
st2
st2 <-subset(h$coz, h$coz != "Not Available")
st2
bad
bad <- subset(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack != "Not Available")
bad
bad <- subset(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
bad <- subset(h,h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
h
coz
bad <- subset(h$coz, h$coz != "Not Available")
bad
bad <- subset(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack != "Not Available")
bad
n <- h$coz
n
n <- h[,2]
n
n <- h[,3]
n
v<- data[,c("State",coz, "Hospital.Name")]
v
head(v)
state_data <- subset(v,v$State== "NC", v$coz != "Not Available")
state_data
state_data <- subset(v,v$State== "NC", v[,2] != "Not Available")
class(v)
head(v)
v[,2]
state_data <- subset(v,v$State== "NC")
state_data2 <- subset(state_data,state_data[,2] != "Not Available")
head(state_data2)
setwd("C:/Users/davis.balaba/Desktop/Coursera/Assignment3")
source("rankhospital.R")
rankhospital("NC", "HEART ATTACK", "WORST")
source("rankhospital.R")
rankhospital("NC", "HEART ATTACK", "WORST")
rankhospital("NC", "HEART ATTACK", "BEST")
v<- data[,c("State",coz, "Hospital.Name")]
state_data1 <- subset(v,v$State== toupper(state))
state_data <-subset(state_data1, state_data1$coz != "Not Available")
coz <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
v<- data[,c("State",coz, "Hospital.Name")]
state_data1 <- subset(v,v$State== toupper(state))
state_data <-subset(state_data1, state_data1$coz != "Not Available")
head(v)
data <- read.csv("outcome-of-care-measures.csv", header= TRUE)
v<- data[,c("State",coz, "Hospital.Name")]
state_data1 <- subset(v,v$State== toupper(state))
state_data <-subset(state_data1, state_data1$coz != "Not Available")
state_data1 <- subset(v,v$State== "NC")
state_data <-subset(state_data1, state_data1$coz != "Not Available")
state_data1 <- subset(v,v$State== "NC")
state_data <-subset(state_data1, state_data1$coz != "Not Available")
state_data <-subset(state_data1, state_data1$coz != "Not Available")
head(state_data)
head(v)
state_data1 <- subset(v,v$State== "NC")
head(state_data1)
coz
state_data <-subset(state_data1, state_data1$coz != "Not Available")
head(state_data)
state_data <-subset(state_data1, state_data1[,2] != "Not Available")
head(state_data)
source("rankhospital.R")
rankhospital("NC", "HEART ATTACK", "BEST")
dir()
source("submitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
rankall("pneumonia","worst")
dir()
source("rankall.R")
rankall("pneumonia","worst")
dir()
source("rankall_old.R")
rankall_old("pneumonia","worst")
rankall("pneumonia","worst")
submit()
setwd("C:/Users/davis.balaba/Desktop/Coursera/specdata")
cat("Result: ", results, "\n")
source("submitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
dir()
submit()
submit()
dir()
setwd("C:/Users/davis.balaba/Desktop/Coursera/Assignment3")
dir()
source("submitscript3.R")
submit()
dir()
source("corr.R")
setwd("C:/Users/davis.balaba/Desktop/Coursera/specdata")
source("corr.R")
corr("specdata/", 10)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
v <- cr[,1]
v
v <- cr[,2]
v
class(v)
source("corr.R")
corr("specdata/", 10)
cr <- corr("specdata/", 10)
cr
head(cr)
cr <- corr("specdata/", 150)
head(cr)
dir()
source("submitscript1.R")
submit()
submit()
submit()
dir()
setwd("C:/Users/davis.balaba/Desktop/Coursera/ProgrammingAssignment2")
dir()
